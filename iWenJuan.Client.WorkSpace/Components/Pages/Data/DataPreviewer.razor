@using System.Globalization
@using System.Dynamic
@using System.Text;

@page "/data-previewer/{FileId}"

@inject NavigationManager Navigation
@inject IHttpClientFactory httpClientFactory

@code {
	[Parameter]
	public string FileId { get; set; }

	private HttpClient _DataStorage = default!;
	private List<string> headers = [];
	private IQueryable<Dictionary<string, string>> fileData = Enumerable.Empty<Dictionary<string, string>>().AsQueryable();

	private PaginationState pagination = new PaginationState { ItemsPerPage = 10 };

	protected override async Task OnInitializedAsync()
	{
		_DataStorage = httpClientFactory.CreateClient("DataStoreService");
		await LoadData();
	}
}


<PageTitle>数据预览</PageTitle>

<FluentLabel Typo="Typography.H1">数据预览</FluentLabel>

@if (fileData.Count() == 0)
{
	<FluentLabel Typo="Typography.H2">数据加载中</FluentLabel>
}
else
{
	<FluentDataGrid Items=@fileData
					AutoFit=true
					ResizableColumns=true
					Pagination=@pagination
					AutoItemsPerPage=true>
		@foreach (var header in headers)
		{
			<PropertyColumn Property="@(data => data[header])" Title=@header Sortable=true />
		}
		@* <propertycolumn property="@(data => data["userid"])" title="userid" sortable=true /> *@
	</FluentDataGrid>

	<FluentPaginator State="@pagination" />
}

@code {
	private async Task LoadData()
	{
		// 获取文件数据
		var fileBytes = await _DataStorage.GetByteArrayAsync($"api/FileStorage/file/{FileId}/data");

		// 解析CSV文件
		using var reader = new StreamReader(new MemoryStream(fileBytes), Encoding.UTF8);
		using var csv = new CsvHelper.CsvReader(reader, CultureInfo.InvariantCulture);

		// 读取表头
		if (csv.Read() && csv.ReadHeader())
		{
			headers = csv.HeaderRecord!.ToList();
		}
		// 读取数据
		while (csv.Read())
		{
			var record = csv.GetRecord<dynamic>() as IDictionary<string, object>;
			var dict = new Dictionary<string, string>();
			foreach (var header in headers)
			{
				dict[header] = record[header]?.ToString() ?? string.Empty;
			}
			fileData = fileData.Append(dict);
		}
		// 移除UserId列
		// headers.Remove("UserId");
	}
}