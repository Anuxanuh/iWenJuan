@page "/change-password/{Email?}"
@layout AuthLayout
@inject NavigationManager Navigation
@inject IDialogService DialogService
@inject IHttpClientFactory httpClientFactory
@code {
	[Parameter] public string? Email { get; set; }
	private HttpClient _httpClient = default!;
	private ViewModel viewModel = new();
	private ChangePasswordModel changePasswordModel = new();

	internal class ViewModel
	{
		public bool ProgressRingVisible { get; set; } = false;
	}

	internal class ChangePasswordModel
	{
		[Required]
		[EmailAddress(ErrorMessage = "邮箱格式不正确")]
		public string Email { get; set; }
	}

	protected override void OnInitialized()
	{
		_httpClient = httpClientFactory.CreateClient("AuthService");

		if (!string.IsNullOrWhiteSpace(Email))
			changePasswordModel.Email = Email;
	}
}

<PageTitle>更改密码</PageTitle>

<FluentCard Style="padding:60px">
	<FluentLabel Typo="Typography.H1" Style="padding-bottom:10px">更改密码</FluentLabel>

	<FluentEditForm Model="changePasswordModel" OnValidSubmit="HandleChangePassword">
		<DataAnnotationsValidator />
		<FluentStack Orientation="Orientation.Vertical">
			<div>
				<FluentTextField @bind-Value="changePasswordModel.Email" Label="邮箱"></FluentTextField>
				<FluentValidationMessage For="() => changePasswordModel.Email"></FluentValidationMessage>
			</div>
			<FluentStack Orientation="Orientation.Horizontal" Style="padding-top:10px">
				<FluentButton Type="ButtonType.Button" Appearance="Appearance.Outline" @onclick="GoToLogin">返回登录</FluentButton>
				<FluentSpacer></FluentSpacer>
				<FluentButton Type="ButtonType.Submit" Appearance="Appearance.Accent">发送验证码</FluentButton>
			</FluentStack>
		</FluentStack>
	</FluentEditForm>
</FluentCard>

<FluentOverlay @bind-Visible=viewModel.ProgressRingVisible
			   Dismissable="false"
			   FullScreen="true"
			   Opacity="0.4">
	<FluentProgressRing Width="128px" />
</FluentOverlay>

@code {
	private void GoToLogin()
	{
		Navigation.NavigateTo("/login");
	}

	private async Task HandleChangePassword()
	{
		// 显示加载动画
		viewModel.ProgressRingVisible = true;

		// 发送更改密码请求
		var response = await _httpClient.PostAsJsonAsync($"/api/auth/change-password", changePasswordModel.Email);

		// 获取响应内容
		var responseText = await response.Content.ReadAsStringAsync();

		// 关闭加载动画
		viewModel.ProgressRingVisible = false;
		StateHasChanged();

		if (response.IsSuccessStatusCode)
		{
			// 更改密码成功
			// 显示成功信息并跳转到验证页面
			var dialog = await DialogService.ShowSuccessAsync(responseText);
			await dialog.Result;
			Navigation.NavigateTo($"/verify-change-password/{changePasswordModel.Email}");
		}
		else
		{
			// 更改密码请求失败并显示错误信息
			await DialogService.ShowErrorAsync(responseText);
		}
	}
}